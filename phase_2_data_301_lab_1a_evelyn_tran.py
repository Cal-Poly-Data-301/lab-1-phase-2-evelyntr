# -*- coding: utf-8 -*-
"""Phase 2 - DATA 301 Lab 1A - Evelyn Tran

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RdbLcg-2UPLXw8kvDM6M_fjOIanaBwrc

# The Distribution of First Digits

In this lab, you will explore the distribution of first digits in real data. For example, the first digits of the numbers 52, 30.8, and 0.07 are 5, 3, and 7 respectively. In this lab, you will investigate the question: how frequently does each digit 1-9 appear as the first digit of the number?

## Question 0

Make a prediction. 

1. Approximately what percentage of the values do you think will have a _first_ digit of 1? What percentage of the values do you think will have a first digit of 9?
2. Approximately what percentage of the values do you think will have a _last_ digit of 1? What percentage of the values do you think will have a last digit of 9?

(Don't worry about being wrong. You will earn full credit for any justified answer.)

1. I predict 10.8% of the values will have a first digit of 1 because in a general sample of 100 numbers from 1-100, there are twelve numbers where the first digit is 1. Since it is unlikely that all of the numbers would be present in the data, I scaled 12 down by 10%, just to account for some errors and unpredictability of real data. With the same sample of 100 numbers from 1-100, there are 10 numbers where the first digit is 9, so I predict 9% of the values will have a first digit of 9 (I also scaled 10 down by 10%).

2. Since there are 10 numbers from 1-100 that have a last digit of 1 and 10 numbers from 1-100 that have a last digit of 9, I predict that 9% of the values will have a last digit of 1 and 9% of the values will have a last digit of 9. I scaled down 10 by 10% to account for errors and unpredictability as it is highly unlikely all of these numbers will be present in the data.

## Question 1

The [S&P 500](https://en.wikipedia.org/wiki/S%26P_500_Index) is a stock index based on the market capitalizations of large companies that are publicly traded on the NYSE or NASDAQ. The CSV file (https://dlsun.github.io/pods/data/sp500.csv) contains data from February 1, 2018 about the stocks that comprise the S&P 500. We will investigate the first digit distributions of the variables in this data set.

Read in the S&P 500 data. What is the unit of observation in this data set? Is there a variable that is natural to use as the index? If so, set that variable to be the index. Once you are done, display the `DataFrame`.
"""

import pandas as pd 

data_dir = "https://dlsun.github.io/pods/data/"
df_sp500 = pd.read_csv(data_dir + "sp500.csv")

df_sp500.set_index(["Name"], inplace=True)
df_sp500

"""The observational unit of this data set is the company's stock that comprise the S&P 500 on February 1, 2018. I think the variable that is natural to use as the index is the "Name" of the company, as the abbreviations are all unique identifiers.

## Question 2

We will start by looking at the `volume` column. This variable tells us how many shares were traded on that date.

Extract the first digit of every value in this column. (_Hint:_ First, turn the numbers into strings. Then, use the [text processing functionalities](https://pandas.pydata.org/pandas-docs/stable/text.html) of `pandas` to extract the first character of each string.) Make an appropriate visualization to display the distribution of the first digits. (_Hint:_ Think carefully about whether the variable you are plotting is quantitative or categorical.)

How does this compare with what you predicted in Question 0?
"""

import pandas as pd 

data_dir = "https://dlsun.github.io/pods/data/"
df_sp500 = pd.read_csv(data_dir + "sp500.csv")

df_sp500.set_index(["Name"], inplace=True)
df_sp500

df_sp500["volume"] = df_sp500["volume"].astype(str)
df_sp500["volume"] = df_sp500.volume.str.slice(stop=1)

volume_counts = df_sp500["volume"].value_counts()
volume_counts.plot.bar()

"""The actual percentages differed greatly from my prediction. Around 165/505 ~ 32.67% of values had a first digit of 1 and approximately 20/505 ~ 0.04% of values had a first digit of 9. Both values are vastly different from 10.8% and 9%.

## Question 3

Now, repeat Question 2, but for the distribution of _last_ digits. Again, make an appropriate visualization and compare with your prediction in Question 0.
"""

import pandas as pd 

data_dir = "https://dlsun.github.io/pods/data/"
df_sp500 = pd.read_csv(data_dir + "sp500.csv")

df_sp500.set_index(["Name"], inplace=True)

df_sp500["volume"] = df_sp500["volume"].astype(str)
df_sp500["volume"] = df_sp500.volume.str.slice(start=-1)

volume_counts = df_sp500["volume"].value_counts()
volume_counts = volume_counts.sort_index()
volume_counts.plot.bar()

"""The distribution of last digits if actually very close to my predictions. I predicted there would be around 9% of values with a last digit of 1 and 9% of values with a last digit of 9. The data reveals that around 55/505 ~ 10.89% of values have a last digit of 1 and another 10.89% of values have a last digit of 9.

## Question 4

Maybe the `volume` column was just a fluke. Let's see if the first digit distribution holds up when we look at a very different variable: the closing price of the stock. Make a visualization of the first digit distribution of the closing price (the `close` column of the `DataFrame`). Comment on what you see.

(_Hint:_ What type did `pandas` infer this variable as and why? You will have to first clean the values using the [text processing functionalities](https://pandas.pydata.org/pandas-docs/stable/text.html) of `pandas` and then convert this variable to a quantitative variable.)
"""

import pandas as pd 

data_dir = "https://dlsun.github.io/pods/data/"
df_sp500 = pd.read_csv(data_dir + "sp500.csv")

df_sp500["close"] = df_sp500.close.str.slice(start=1)
df_sp500["close"] = df_sp500.close.str.replace(',', '')
df_sp500["close"] = df_sp500.close.str.replace('.', '')
df_sp500["close"] = df_sp500.close.str.slice(stop=1)

close_counts = df_sp500["close"].value_counts()
close_counts.plot.bar()

"""There was approximately 165/505 ~ 32.67% of the closing price values that started with 1. This result is reasonable since that means that the closing price of a single company's stock was in the hundreds. For example, AAPL is currently $172USD, so I'd say a majority of the other companies of this stature are around this price range. Pandas inferred this variable was a categorical variable most likely because the first index of the value was a symbol, so it interpretted that the value would be a string or a label and not a quantitative value. """